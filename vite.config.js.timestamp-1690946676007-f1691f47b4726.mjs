// vite.config.js
import solid from "file:///home/lihe07/Desktop/carbinsight/node_modules/solid-start/vite/plugin.js";
import { defineConfig } from "file:///home/lihe07/Desktop/carbinsight/node_modules/vite/dist/node/index.js";
import unocss from "file:///home/lihe07/Desktop/carbinsight/node_modules/unocss/dist/vite.mjs";

// src/article.js
import { Client } from "file:///home/lihe07/Desktop/carbinsight/node_modules/@notionhq/client/build/src/index.js";
import NotionPageToHtml from "file:///home/lihe07/Desktop/carbinsight/node_modules/notion-page-to-html/dist/index.js";
import dotenv from "file:///home/lihe07/Desktop/carbinsight/node_modules/dotenv/lib/main.js";
import { bootstrap } from "file:///home/lihe07/Desktop/carbinsight/node_modules/global-agent/dist/index.js";
var defaultCover = "https://www.notion.so/images/page-cover/solid_yellow.png";
function makeClient() {
  dotenv.config();
  bootstrap();
  return new Client({
    auth: process.env.NOTION_TOKEN,
    timeoutMs: 1e4
  });
}
function checkPage(page) {
  try {
    mapPage(page);
    return true;
  } catch (e) {
    console.log("Invalid page", page);
    return false;
  }
}
function mapPage(page) {
  var _a, _b, _c, _d, _e;
  return {
    id: page.properties.id.rich_text[0].plain_text,
    lang: page.properties.Lang.select.name,
    title: page.properties.Title.title[0].plain_text,
    description: ((_a = page.properties.Description.rich_text[0]) == null ? void 0 : _a.plain_text) || "",
    date: page.properties.Date.date.start,
    cover: ((_c = (_b = page.cover) == null ? void 0 : _b.external) == null ? void 0 : _c.url) || defaultCover,
    tags: page.properties.Tags.multi_select.map((tag) => tag.name),
    orgnization: (_e = (_d = page.properties.Org) == null ? void 0 : _d.select) == null ? void 0 : _e.name
  };
}
var cacheList = null;
async function listArticles() {
  if (cacheList)
    return cacheList;
  const pages = await makeClient().databases.query({
    database_id: process.env.NOTION_DATABASE_ID
  });
  cacheList = pages.results.filter(checkPage).map(mapPage);
  return cacheList;
}

// vite.config.js
var __vite_injected_original_dirname = "/home/lihe07/Desktop/carbinsight";
var prerenderRoutes = ["/articles-raw/"];
for (const article of await listArticles()) {
  prerenderRoutes.push("/articles/" + article.id);
  prerenderRoutes.push("/articles-raw/" + article.id);
}
var vite_config_default = defineConfig({
  resolve: {
    alias: {
      "@": `${__vite_injected_original_dirname}/src`
    }
  },
  plugins: [
    unocss(),
    solid({
      adapter: "solid-start-static",
      prerenderRoutes
    })
  ]
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcuanMiLCAic3JjL2FydGljbGUuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvaG9tZS9saWhlMDcvRGVza3RvcC9jYXJiaW5zaWdodFwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvbGloZTA3L0Rlc2t0b3AvY2FyYmluc2lnaHQvdml0ZS5jb25maWcuanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUvbGloZTA3L0Rlc2t0b3AvY2FyYmluc2lnaHQvdml0ZS5jb25maWcuanNcIjtpbXBvcnQgc29saWQgZnJvbSBcInNvbGlkLXN0YXJ0L3ZpdGVcIjtcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCI7XG5pbXBvcnQgdW5vY3NzIGZyb20gXCJ1bm9jc3Mvdml0ZVwiO1xuaW1wb3J0IHsgbGlzdEFydGljbGVzIH0gZnJvbSBcIi4vc3JjL2FydGljbGVcIjtcblxuY29uc3QgcHJlcmVuZGVyUm91dGVzID0gW1wiL2FydGljbGVzLXJhdy9cIl07XG5cbmZvciAoY29uc3QgYXJ0aWNsZSBvZiBhd2FpdCBsaXN0QXJ0aWNsZXMoKSkge1xuICBwcmVyZW5kZXJSb3V0ZXMucHVzaChcIi9hcnRpY2xlcy9cIiArIGFydGljbGUuaWQpO1xuICBwcmVyZW5kZXJSb3V0ZXMucHVzaChcIi9hcnRpY2xlcy1yYXcvXCIgKyBhcnRpY2xlLmlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgcmVzb2x2ZToge1xuICAgIGFsaWFzOiB7XG4gICAgICBcIkBcIjogYCR7X19kaXJuYW1lfS9zcmNgLFxuICAgIH0sXG4gIH0sXG4gIHBsdWdpbnM6IFtcbiAgICB1bm9jc3MoKSxcbiAgICBzb2xpZCh7XG4gICAgICBhZGFwdGVyOiBcInNvbGlkLXN0YXJ0LXN0YXRpY1wiLFxuICAgICAgcHJlcmVuZGVyUm91dGVzLFxuICAgIH0pLFxuICBdLFxufSk7XG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9ob21lL2xpaGUwNy9EZXNrdG9wL2NhcmJpbnNpZ2h0L3NyY1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvbGloZTA3L0Rlc2t0b3AvY2FyYmluc2lnaHQvc3JjL2FydGljbGUuanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUvbGloZTA3L0Rlc2t0b3AvY2FyYmluc2lnaHQvc3JjL2FydGljbGUuanNcIjtpbXBvcnQgeyBDbGllbnQgfSBmcm9tIFwiQG5vdGlvbmhxL2NsaWVudFwiO1xuaW1wb3J0IE5vdGlvblBhZ2VUb0h0bWwgZnJvbSBcIm5vdGlvbi1wYWdlLXRvLWh0bWxcIjtcblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBBcnRpY2xlXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBsYW5nXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdGl0bGVcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBkZXNjcmlwdGlvblxuICogQHByb3BlcnR5IHtzdHJpbmd9IGRhdGVcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBjb3ZlclxuICogQHByb3BlcnR5IHtzdHJpbmdbXX0gdGFnc1xuICogQHByb3BlcnR5IHtzdHJpbmc/fSBjb250ZW50XG4gKiBAcHJvcGVydHkge3N0cmluZz99IGZpbGVcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nP30gb3Jnbml6YXRpb25cbiAqL1xuXG4vLyBMb2FkIC5lbnZcbmltcG9ydCBkb3RlbnYgZnJvbSBcImRvdGVudlwiO1xuaW1wb3J0IHsgYm9vdHN0cmFwIH0gZnJvbSBcImdsb2JhbC1hZ2VudFwiO1xuXG5jb25zdCBkZWZhdWx0Q292ZXIgPSBcImh0dHBzOi8vd3d3Lm5vdGlvbi5zby9pbWFnZXMvcGFnZS1jb3Zlci9zb2xpZF95ZWxsb3cucG5nXCI7XG5cbmZ1bmN0aW9uIG1ha2VDbGllbnQoKSB7XG4gIGRvdGVudi5jb25maWcoKTtcbiAgYm9vdHN0cmFwKCk7XG5cbiAgcmV0dXJuIG5ldyBDbGllbnQoe1xuICAgIGF1dGg6IHByb2Nlc3MuZW52Lk5PVElPTl9UT0tFTixcbiAgICB0aW1lb3V0TXM6IDEwMDAwLFxuICB9KTtcbn1cblxuZnVuY3Rpb24gY2hlY2tQYWdlKHBhZ2UpIHtcbiAgLy8gQ2hlY2sgaWYgcGFnZSBoYXMgYWxsIHJlcXVpcmVkIHByb3BlcnRpZXNcbiAgdHJ5IHtcbiAgICBtYXBQYWdlKHBhZ2UpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coXCJJbnZhbGlkIHBhZ2VcIiwgcGFnZSk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1hcFBhZ2UocGFnZSkge1xuICByZXR1cm4ge1xuICAgIGlkOiBwYWdlLnByb3BlcnRpZXMuaWQucmljaF90ZXh0WzBdLnBsYWluX3RleHQsXG4gICAgbGFuZzogcGFnZS5wcm9wZXJ0aWVzLkxhbmcuc2VsZWN0Lm5hbWUsXG4gICAgdGl0bGU6IHBhZ2UucHJvcGVydGllcy5UaXRsZS50aXRsZVswXS5wbGFpbl90ZXh0LFxuICAgIGRlc2NyaXB0aW9uOiBwYWdlLnByb3BlcnRpZXMuRGVzY3JpcHRpb24ucmljaF90ZXh0WzBdPy5wbGFpbl90ZXh0IHx8IFwiXCIsXG4gICAgZGF0ZTogcGFnZS5wcm9wZXJ0aWVzLkRhdGUuZGF0ZS5zdGFydCxcbiAgICBjb3ZlcjogcGFnZS5jb3Zlcj8uZXh0ZXJuYWw/LnVybCB8fCBkZWZhdWx0Q292ZXIsXG4gICAgdGFnczogcGFnZS5wcm9wZXJ0aWVzLlRhZ3MubXVsdGlfc2VsZWN0Lm1hcCgodGFnKSA9PiB0YWcubmFtZSksXG4gICAgb3Jnbml6YXRpb246IHBhZ2UucHJvcGVydGllcy5Pcmc/LnNlbGVjdD8ubmFtZSxcbiAgfTtcbn1cblxuY29uc3QgY2FjaGUgPSB7fTtcblxuYXN5bmMgZnVuY3Rpb24gX3BhcnNlQXJ0aWNsZShpZCkge1xuICBjb25zb2xlLmxvZyhcInBhcnNlQXJ0aWNsZVwiLCBpZCk7XG4gIGNvbnN0IHBhZ2VzID0gYXdhaXQgbWFrZUNsaWVudCgpLmRhdGFiYXNlcy5xdWVyeSh7XG4gICAgZGF0YWJhc2VfaWQ6IHByb2Nlc3MuZW52Lk5PVElPTl9EQVRBQkFTRV9JRCxcbiAgICBmaWx0ZXI6IHtcbiAgICAgIHByb3BlcnR5OiBcImlkXCIsXG4gICAgICByaWNoX3RleHQ6IHtcbiAgICAgICAgZXF1YWxzOiBpZCxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gICBjb25zb2xlLmxvZyhwYWdlcyk7XG4gIHJldHVybiBhd2FpdCBQcm9taXNlLmFsbChcbiAgICBwYWdlcy5yZXN1bHRzLmZpbHRlcihjaGVja1BhZ2UpLm1hcChhc3luYyAocGFnZSkgPT4ge1xuICAgICAgbGV0IGFydGljbGUgPSBtYXBQYWdlKHBhZ2UpO1xuICAgICAgYXJ0aWNsZS5jb250ZW50ID0gKFxuICAgICAgICBhd2FpdCBOb3Rpb25QYWdlVG9IdG1sLmNvbnZlcnQocGFnZS51cmwsIHtcbiAgICAgICAgICBib2R5Q29udGVudE9ubHk6IHRydWUsXG4gICAgICAgIH0pXG4gICAgICApLmh0bWw7XG4gICAgICByZXR1cm4gYXJ0aWNsZTtcbiAgICB9KVxuICApO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICogQHJldHVybnMge1Byb21pc2U8QXJ0aWNsZVtdPn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBhcnNlQXJ0aWNsZShpZCkge1xuICBpZiAoY2FjaGVbaWRdKSB7XG4gICAgY29uc29sZS5sb2coXCJjYWNoZSBoaXRcIiwgaWQpO1xuICAgIHJldHVybiBjYWNoZVtpZF07XG4gIH1cbiAgY2FjaGVbaWRdID0gYXdhaXQgX3BhcnNlQXJ0aWNsZShpZCk7XG4gIHJldHVybiBjYWNoZVtpZF07XG59XG5cbmxldCBjYWNoZUxpc3QgPSBudWxsO1xuXG4vKipcbiAqIEByZXR1cm5zIHtQcm9taXNlPEFydGljbGVbXT59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsaXN0QXJ0aWNsZXMoKSB7XG4gIGlmIChjYWNoZUxpc3QpIHJldHVybiBjYWNoZUxpc3Q7XG5cbiAgY29uc3QgcGFnZXMgPSBhd2FpdCBtYWtlQ2xpZW50KCkuZGF0YWJhc2VzLnF1ZXJ5KHtcbiAgICBkYXRhYmFzZV9pZDogcHJvY2Vzcy5lbnYuTk9USU9OX0RBVEFCQVNFX0lELFxuICB9KTtcblxuICBjYWNoZUxpc3QgPSBwYWdlcy5yZXN1bHRzLmZpbHRlcihjaGVja1BhZ2UpLm1hcChtYXBQYWdlKTtcbiAgcmV0dXJuIGNhY2hlTGlzdDtcbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBa1IsT0FBTyxXQUFXO0FBQ3BTLFNBQVMsb0JBQW9CO0FBQzdCLE9BQU8sWUFBWTs7O0FDRm1RLFNBQVMsY0FBYztBQUM3UyxPQUFPLHNCQUFzQjtBQWlCN0IsT0FBTyxZQUFZO0FBQ25CLFNBQVMsaUJBQWlCO0FBRTFCLElBQU0sZUFBZTtBQUVyQixTQUFTLGFBQWE7QUFDcEIsU0FBTyxPQUFPO0FBQ2QsWUFBVTtBQUVWLFNBQU8sSUFBSSxPQUFPO0FBQUEsSUFDaEIsTUFBTSxRQUFRLElBQUk7QUFBQSxJQUNsQixXQUFXO0FBQUEsRUFDYixDQUFDO0FBQ0g7QUFFQSxTQUFTLFVBQVUsTUFBTTtBQUV2QixNQUFJO0FBQ0YsWUFBUSxJQUFJO0FBQ1osV0FBTztBQUFBLEVBQ1QsU0FBUyxHQUFQO0FBQ0EsWUFBUSxJQUFJLGdCQUFnQixJQUFJO0FBQ2hDLFdBQU87QUFBQSxFQUNUO0FBQ0Y7QUFFQSxTQUFTLFFBQVEsTUFBTTtBQTVDdkI7QUE2Q0UsU0FBTztBQUFBLElBQ0wsSUFBSSxLQUFLLFdBQVcsR0FBRyxVQUFVLENBQUMsRUFBRTtBQUFBLElBQ3BDLE1BQU0sS0FBSyxXQUFXLEtBQUssT0FBTztBQUFBLElBQ2xDLE9BQU8sS0FBSyxXQUFXLE1BQU0sTUFBTSxDQUFDLEVBQUU7QUFBQSxJQUN0QyxlQUFhLFVBQUssV0FBVyxZQUFZLFVBQVUsQ0FBQyxNQUF2QyxtQkFBMEMsZUFBYztBQUFBLElBQ3JFLE1BQU0sS0FBSyxXQUFXLEtBQUssS0FBSztBQUFBLElBQ2hDLFNBQU8sZ0JBQUssVUFBTCxtQkFBWSxhQUFaLG1CQUFzQixRQUFPO0FBQUEsSUFDcEMsTUFBTSxLQUFLLFdBQVcsS0FBSyxhQUFhLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSTtBQUFBLElBQzdELGNBQWEsZ0JBQUssV0FBVyxRQUFoQixtQkFBcUIsV0FBckIsbUJBQTZCO0FBQUEsRUFDNUM7QUFDRjtBQTJDQSxJQUFJLFlBQVk7QUFLaEIsZUFBc0IsZUFBZTtBQUNuQyxNQUFJO0FBQVcsV0FBTztBQUV0QixRQUFNLFFBQVEsTUFBTSxXQUFXLEVBQUUsVUFBVSxNQUFNO0FBQUEsSUFDL0MsYUFBYSxRQUFRLElBQUk7QUFBQSxFQUMzQixDQUFDO0FBRUQsY0FBWSxNQUFNLFFBQVEsT0FBTyxTQUFTLEVBQUUsSUFBSSxPQUFPO0FBQ3ZELFNBQU87QUFDVDs7O0FEaEhBLElBQU0sbUNBQW1DO0FBS3pDLElBQU0sa0JBQWtCLENBQUMsZ0JBQWdCO0FBRXpDLFdBQVcsV0FBVyxNQUFNLGFBQWEsR0FBRztBQUMxQyxrQkFBZ0IsS0FBSyxlQUFlLFFBQVEsRUFBRTtBQUM5QyxrQkFBZ0IsS0FBSyxtQkFBbUIsUUFBUSxFQUFFO0FBQ3BEO0FBRUEsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsU0FBUztBQUFBLElBQ1AsT0FBTztBQUFBLE1BQ0wsS0FBSyxHQUFHO0FBQUEsSUFDVjtBQUFBLEVBQ0Y7QUFBQSxFQUNBLFNBQVM7QUFBQSxJQUNQLE9BQU87QUFBQSxJQUNQLE1BQU07QUFBQSxNQUNKLFNBQVM7QUFBQSxNQUNUO0FBQUEsSUFDRixDQUFDO0FBQUEsRUFDSDtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
